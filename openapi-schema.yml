openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /players/:
    get:
      operationId: listPlayers
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Player'
          description: ''
      tags:
      - players
    post:
      operationId: createPlayer
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Player'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Player'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Player'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
          description: ''
      tags:
      - players
  /players/{id}:
    get:
      operationId: retrievePlayer
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this player.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
          description: ''
      tags:
      - players
    put:
      operationId: updatePlayer
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this player.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Player'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Player'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Player'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
          description: ''
      tags:
      - players
    patch:
      operationId: partialUpdatePlayer
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this player.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Player'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Player'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Player'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
          description: ''
      tags:
      - players
    delete:
      operationId: destroyPlayer
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this player.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - players
  /auth/:
    post:
      operationId: createAuthToken
      description: ''
      parameters: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
      tags:
      - auth
components:
  schemas:
    Player:
      type: object
      properties:
        user:
          type: object
          properties:
            username:
              type: string
              description: Required. 150 characters or fewer. Letters, digits and
                @/./+/-/_ only.
              pattern: ^[\w.@+-]+\z
              maxLength: 150
            password:
              type: string
              writeOnly: true
              maxLength: 128
            first_name:
              type: string
              maxLength: 150
            last_name:
              type: string
              maxLength: 150
            email:
              type: string
              format: email
              maxLength: 254
          required:
          - username
          - password
        rating:
          type: integer
          readOnly: true
      required:
      - user
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - username
      - password
